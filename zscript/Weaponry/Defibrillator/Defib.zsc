const HDLD_DEFIB="dfb";

class HDefib:HDCellWeapon{
default{
		+WEAPON.MELEEWEAPON +WEAPON.NOALERT +WEAPON.NO_AUTO_SWITCH
		obituary "%o was... somehow killed by %k?";
		weapon.selectionorder 100;
		weapon.kickback 120;
		weapon.bobstyle "Alpha";
		weapon.bobspeed 2.6;
		weapon.bobrangex 0.1;
		weapon.bobrangey 0.5;
		weapon.slotnumber 8;
		weapon.slotpriority 0;
		tag "Defib";
		hdweapon.refid HDLD_DEFIB;
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	override void tick(){
		super.tick();
	}
	override double gunmass(){
		return 10+(weaponstatus[DEFIB_BATTERY]<0?0:2);
	}
	override double weaponbulk(){
		return 50+(weaponstatus[1]>=0?ENC_BATTERY_LOADED:0);
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			sb.drawbattery(-54,-4,sb.DI_SCREEN_CENTER_BOTTOM,reloadorder:true);
			sb.drawnum(hpl.countinv("HDBattery"),-46,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		int bat=hdw.weaponstatus[DEFIB_BATTERY];
		if(bat>0)sb.drawwepnum(bat,20);
		else if(!bat)sb.drawstring(
			sb.mamountfont,"00000",
			(-16,-9),sb.DI_TEXT_ALIGN_RIGHT|sb.DI_TRANSLATABLE|sb.DI_SCREEN_CENTER_BOTTOM,
			Font.CR_DARKGRAY
		);}
override void failedpickupunload(){
		failedpickupunloadmag(DEFIB_BATTERY,"HDBattery");
	}
override void consolidate(){
	CheckBFGCharge(DEFIB_BATTERY);
	}
	override void initializewepstats(bool idfa){
		weaponstatus[DEFIB_BATTERY]=20;
	}
	action void A_DefibZap(){
		int battery=invoker.weaponstatus[DEFIB_BATTERY];
		if(battery<1){
			setweaponstate("nope");}
		else{
		bool HasPlayedSound;
		double MaxRange = HDCONST_ONEMETRE * 5;

		BlockThingsIterator it = BlockThingsIterator.Create(self, MaxRange);
		while (it.Next())
		{
			if (Distance3D(it.thing) > MaxRange)
			{
				continue;
			}
			
			HDPlayerCorpse PCorpse = HDPlayerCorpse(it.thing);
			if (PCorpse && PCorpse.corpsegiver)
			{
				if (!HasPlayedSound)
				{
					//PlayCastSound(self, "Arcanum/Restoration/Resurrect");
					HasPlayedSound = true;
				}

				PCorpse.corpsegiver.respawndelay = 0;
				invoker.weaponstatus[DEFIB_BATTERY]--;
			}
		}}
		}
states
{
ready:
		DEFB A 1 A_WeaponReady(WRF_ALL&~WRF_ALLOWUSER1);
	goto readyend;
fire:
	DEFB A 0; //{if(hd_pof==false){A_WeaponMessage("\cgThis equipment requires POF (Power of Friendship) to be on!",100);};};
	DEFB B 1; //offset(0,32);
	DEFB A 1; //A_StrengthTics(0,2);
	DEFB B 1; //A_Recoil(min(0,1.-invoker.strength));
	DEFB C 1;
	DEFB D 1;
	DEFB E 1;
	DEFB F 1;
	DEFB G 1;
	DEFB H 1;
	DEFB I 1;
	DEFB J 5 A_DefibZap;
	DEFB K 1;
	DEFB J 1;
	DEFB I 1;
	DEFB H 1;
	DEFB G 1;
	DEFB F 1;
	DEFB E 1;
	DEFB D 1;
	DEFB C 1;
	DEFB B 1;
	DEFB A 1;
	goto ready;
	
	//THUNDERBUSTER CODE
	unload:
		#### A 0{
			invoker.weaponstatus[0]|=DEFIB_JUSTUNLOAD;
			if(invoker.weaponstatus[DEFIB_BATTERY]>=0)
				return resolvestate("unmag");
			return resolvestate("nope");
		}
	unmag:
		#### A 2 offset(0,33){
			A_SetCrosshair(21);
			A_MuzzleClimb(frandom(-1.2,-2.4),frandom(1.2,2.4));
		}
		#### A 3 offset(0,35);
		#### A 2 offset(0,40) A_StartSound("weapons/plasopen",8);
		#### A 0{
			int bat=invoker.weaponstatus[DEFIB_BATTERY];
			A_MuzzleClimb(frandom(-1.2,-2.4),frandom(1.2,2.4));
			if(
				(
					bat<0
				)||(
					!PressingUnload()&&!PressingReload()
				)
			)return resolvestate("dropmag");
			return resolvestate("pocketmag");
		}

	dropmag:
		---- A 0{
			int bat=invoker.weaponstatus[DEFIB_BATTERY];
			invoker.weaponstatus[DEFIB_BATTERY]=-1;
			if(bat>=0){
				HDMagAmmo.SpawnMag(self,"HDBattery",bat);
			}
		}goto magout;

	pocketmag:
		---- A 0{
			int bat=invoker.weaponstatus[DEFIB_BATTERY];
			invoker.weaponstatus[DEFIB_BATTERY]=-1;
			if(bat>=0){
				HDMagAmmo.GiveMag(self,"HDBattery",bat);
			}
		}
		#### A 8 offset(0,43) A_StartSound("weapons/pocket",9);
		#### A 8 offset(0,42) A_StartSound("weapons/pocket",9);
		goto magout;

	magout:
		---- A 0 A_JumpIf(invoker.weaponstatus[0]&DEFIB_JUSTUNLOAD,"Reload3");
		goto loadmag;

	reload:
		#### A 0{
			invoker.weaponstatus[0]&=~DEFIB_JUSTUNLOAD;
			if(
				invoker.weaponstatus[DEFIB_BATTERY]<20
				&&countinv("HDBattery")
			)setweaponstate("unmag");
		}goto nope;

	loadmag:
		#### A 12 offset(0,42);
		#### A 2 offset(0,43){if(health>39)A_SetTics(0);}
		#### AA 2 offset(0,42);
		#### A 2 offset(0,44) A_StartSound("weapons/pocket",9);
		#### A 4 offset(0,43) A_StartSound("weapons/pocket",9);
		#### A 6 offset(0,42);
		#### A 8 offset(0,38)A_StartSound("weapons/plasload",8);
		#### A 4 offset(0,37){if(health>39)A_SetTics(0);}
		#### A 4 offset(0,36)A_StartSound("weapons/plasclose",8);

		#### A 0{
			let mmm=HDMagAmmo(findinventory("HDBattery"));
			if(mmm)invoker.weaponstatus[DEFIB_BATTERY]=mmm.TakeMag(true);
		}goto reload3;

	reload3:
		#### A 6 offset(0,40) A_StartSound("weapons/plasclose2",8);
		#### A 2 offset(0,36);
		#### A 4 offset(0,33);
		goto nope;

	user3:
		#### A 0 A_MagManager("HDBattery");
		goto ready;
    spawn:
		DEFG A -1 nodelay;
		stop;
}
}

enum defibstatus{
DEFIB_JUSTUNLOAD=2,
DEFIB_BATTERY=1,
};